Interesse <- kontaktaiw %>%
count(Q15Interesse) %>%
mutate(percentage = n / sum(n))
library(readxl)
library(dplyr)
library(openxlsx)
library(ggplot2)
library(tibble)
library(tidyr)
library(forcats)
Interesse <- kontaktaiw %>%
count(Q15Interesse) %>%
mutate(percentage = n / sum(n))
View(Interesse)
Angst <- kontaktaiw %>%
count(Q15Angst) %>%
mutate(percentage = n / sum(n))
Angst <- kontaktaiw %>%
count(Q15AktuellerStand) %>%
mutate(percentage = n / sum(n))
View(Angst)
View(Angst)
Angst <- kontaktaiw %>%
count(Q15Angst) %>%
mutate(percentage = n / sum(n))
View(Angst)
Stand <- kontaktaiw %>%
count(Q15AktuellerStand) %>%
mutate(percentage = n / sum(n))
QualiS <- kontaktaiw %>%
count(Q15Qualitaetselbst) %>%
mutate(percentage = n / sum(n))
QualiP <- kontaktaiw %>%
count(Q15QualitaetPat) %>%
mutate(percentage = n / sum(n))
View(Angst)
Q15Zusammenfassung <- Interesse %>%
full_join(Angst, by = "percentage") %>%
full_join(Stand, by = "percentage") %>%
full_join(QualiS, by = "percentage") %>%
full_join(QualiP, by = "percentage")
View(Q15Zusammenfassung)
View(Stand)
View(Angst)
levels(Ergebnisse_bearb$Q49)
Geld1 <- kontaktaiw %>%
count(Q49) %>%
mutate(Anteil = n / sum(n))
View(Geld1)
Geld2 <- kontaktaiw %>%
count(Q50) %>%
mutate(Anteil = n / sum(n))
View(Geld1)
View(Geld2)
write.xlsx(Q15Zusammenfassung, "Motivation.xlsx", overwrite = TRUE)
View(Interesse)
View(QualiP)
View(QualiS)
View(QualiP)
View(Angst)
View(Stand)
View(Geld1)
write.xlsx(Geld1, "Geld1.xlsx", overwirte = TRUE)
write.xlsx(Geld2, "Geld2.xlsx", overwirte = TRUE)
